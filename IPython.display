from IPython.display import display, HTML

html_code = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ledgerly - Your Small Business Operating System</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #121212;
            color: #e0e0e0;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            flex-direction: column;
            overflow-y: scroll;
        }
        h1 {
            color: #4CAF50;
            font-weight: bold;
            text-align: center;
            font-size: 3rem;
            margin-bottom: 40px;
        }
        .icon-container {
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            gap: 20px;
            margin-bottom: 30px;
        }
        .icon-btn {
            display: inline-block;
            background-color: #333;
            color: #e0e0e0;
            padding: 15px 25px;
            border-radius: 10px;
            cursor: pointer;
            width: 80%;
            max-width: 300px;
            text-align: left;
            font-weight: bold;
        }
        .icon-btn:hover {
            background-color: #4CAF50;
            transform: scale(1.05);
            color: white;
        }
        section {
            margin-top: 20px;
            display: none;
        }
        section.active {
            display: block;
        }
        #profitLossChart {
            max-width: 800px;
            margin: 0 auto;
            height: 400px;
            border-radius: 10px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Ledgerly</h1>

        <div class="icon-container">
            <div class="icon-btn" id="employeeBtn">Add New Employee</div>
            <div class="icon-btn" id="storeBtn">Add New Store</div>
            <div class="icon-btn" id="productBtn">Add New Product</div>
            <div class="icon-btn" id="saleBtn">Record a Sale</div>
            <div class="icon-btn" id="overviewBtn">Company Overview</div>
        </div>

        <section id="employeeSection">
            <h2>Add New Employee</h2>
            <form id="addEmployeeForm">
                <div>
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" required>
                </div>
                <div>
                    <label for="position">Position:</label>
                    <input type="text" id="position" name="position" required>
                </div>
                <input type="submit" value="Add Employee">
            </form>
        </section>

        <section id="overviewSection">
            <h2>Company Overview</h2>
            <canvas id="profitLossChart"></canvas>
        </section>

    </div>

    <script>
        function toggleSection(sectionId) {
            const sections = document.querySelectorAll('section');
            sections.forEach((section) => {
                if (section.id === sectionId) {
                    section.classList.add('active');
                } else {
                    section.classList.remove('active');
                }
            });
        }

        document.getElementById('employeeBtn').addEventListener('click', function() {
            toggleSection('employeeSection');
        });

        document.getElementById('overviewBtn').addEventListener('click', function() {
            toggleSection('overviewSection');
        });

        const ctx = document.getElementById('profitLossChart').getContext('2d');
        const gradientProfit = ctx.createLinearGradient(0, 0, 0, 400);
        gradientProfit.addColorStop(0, 'rgba(76, 175, 80, 0.8)');
        gradientProfit.addColorStop(1, 'rgba(76, 175, 80, 0.3)');

        const gradientLoss = ctx.createLinearGradient(0, 0, 0, 400);
        gradientLoss.addColorStop(0, 'rgba(244, 67, 54, 0.8)');
        gradientLoss.addColorStop(1, 'rgba(244, 67, 54, 0.3)');

        const profitLossChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June'],
                datasets: [{
                    label: 'Profit',
                    data: [1200, 1900, 3500, 2100, 3000, 4200],
                    fill: true,
                    backgroundColor: gradientProfit,
                    borderColor: '#4CAF50',
                    tension: 0.4,
                    borderWidth: 2,
                    pointRadius: 6,
                    pointBackgroundColor: '#4CAF50',
                    pointBorderWidth: 2,
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: '#4CAF50',
                    pointHoverRadius: 8
                }, {
                    label: 'Loss',
                    data: [500, 800, 1000, 600, 700, 900],
                    fill: true,
                    backgroundColor: gradientLoss,
                    borderColor: '#f44336',
                    tension: 0.4,
                    borderWidth: 2,
                    pointRadius: 6,
                    pointBackgroundColor: '#f44336',
                    pointBorderWidth: 2,
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: '#f44336',
                    pointHoverRadius: 8
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top', labels: { color: '#fff' } },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.7)',
                        callbacks: { label: function(tooltipItem) { return `$${tooltipItem.raw}`; } }
                    }
                },
                scales: {
                    y: { beginAtZero: true, ticks: { font: { size: 14 }, color: '#e0e0e0' }, grid: { color: '#444' } },
                    x: { ticks: { font: { size: 14 }, color: '#e0e0e0' }, grid: { color: '#444' } }
                }
            }
        });
    </script>

</body>
</html>
"""

# Display the HTML code in the notebook
display(HTML(html_code))
